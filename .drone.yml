---
kind: pipeline
type: docker
name: testing-python-3.7

platform:
  os: linux
  arch: amd64

steps:
- name: test
  pull: always
  image: python:3.7
  commands:
  - pip3 install --no-cache-dir --upgrade -r dev-requirements.txt
  - pytest --cov=grundzeug tests

trigger:
  ref:
  - refs/heads/master
  - refs/pull/*/head
  - refs/tags/v*

---
kind: pipeline
type: docker
name: testing-python-3.8

platform:
  os: linux
  arch: amd64

steps:
- name: restore-cache
  image: meltwater/drone-cache
  environment:
    CACHE_AWS_ACCESS_KEY_ID: drone_cache2
    CACHE_AWS_SECRET_ACCESS_KEY:
      from_secret: MINIO_SECRET_KEY_DRONE_CACHE
  pull: true
  settings:
    restore: true
    cache_key: python38_{{ checksum "dev-requirements.txt" }}
    bucket: drone-cache
    region: eu-west-1
    path_style: true
    endpoint: minio.centos2.nickguletskii.com
    mount:
      - '/root/.cache/pip'
- name: test
  pull: always
  image: python:3.8
  commands:
  - pip3 install --upgrade -r dev-requirements.txt
  - pytest --cov=grundzeug tests
- name: rebuild-cache
  image: meltwater/drone-cache
  pull: true
  environment:
    CACHE_AWS_ACCESS_KEY_ID: drone_cache
    CACHE_AWS_SECRET_ACCESS_KEY:
      from_secret: MINIO_SECRET_KEY_DRONE_CACHE
  settings:
    rebuild: true
    cache_key: python38_{{ checksum "dev-requirements.txt" }}
    bucket: drone-cache
    region: eu-west-1
    path_style: true
    endpoint: minio.centos2.nickguletskii.com
    mount:
      - '/root/.cache/pip'
trigger:
  ref:
  - refs/heads/master
  - refs/pull/*/head
  - refs/tags/v*

---
kind: pipeline
type: docker
name: tag/docs

platform:
  os: linux
  arch: amd64

steps:
- name: build
  pull: always
  image: python:3.8
  commands:
  - pip3 install --no-cache-dir --upgrade -r dev-requirements.txt
  - cd docs
  - make html

- name: deploy
  pull: always
  image: minio/mc:latest
  commands:
  - mc mirror --debug --overwrite docs/build/html/ site/grundzeug-root/docs/
  environment:
    MC_HOST_site:
      from_secret: MC_HOST_site

trigger:
  ref:
  - refs/tags/v*

---
kind: pipeline
type: docker
name: tag/publish

platform:
  os: linux
  arch: amd64

steps:
- name: build_and_deploy
  pull: always
  image: python:3.7
  commands:
  - pip3 install --no-cache-dir --upgrade wheel twine
  - git status
  - git describe --dirty --tags --long
  - git describe --dirty --tags
  - git describe --tags
  - python3.7 setup.py bdist_wheel

- name: pypi_publish
  image: plugins/pypi
  settings:
    password:
      from_secret: TWINE_PASSWORD
    username:
      from_secret: TWINE_USERNAME

trigger:
  ref:
  - refs/tags/v*

depends_on:
- testing-python-3.7
- testing-python-3.8

